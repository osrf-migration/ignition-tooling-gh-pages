{"links": {"self": {"href": "data/repositories/osrf/release-tools/issues/137/comments/46486279.json"}, "html": {"href": "#!/osrf/release-tools/issues/137#comment-46486279"}}, "issue": {"links": {"self": {"href": "data/repositories/osrf/release-tools/issues/137.json"}}, "type": "issue", "id": 137, "repository": {"links": {"self": {"href": "data/repositories/osrf/release-tools.json"}, "html": {"href": "#!/osrf/release-tools"}, "avatar": {"href": "data/bytebucket.org/ravatar/{41811d3d-19d0-428e-a134-976595e72508}ts=python"}}, "type": "repository", "name": "release-tools", "full_name": "osrf/release-tools", "uuid": "{41811d3d-19d0-428e-a134-976595e72508}"}, "title": "Compiler support for gazebo11"}, "content": {"raw": "Ok, this is all a bit confusing. This whole time I have been looking at the MacOSX SDK, which has libc++ headers in `/usr/include/c++/4.2.1` and doesn't have `any` or other c++17 features. The Xcode command-line tools put these headers in `/usr/include`, while if you just install Xcode, they are located inside the Xcode.app. Someone has also collected them on github:\n\n* https://github.com/phracker/MacOSX-SDKs/tree/master/MacOSX10.13.sdk/usr/include/c%2B%2B/4.2.1\n\nHowever, there are separate headers that have more advanced features. The command-line tools place these headers in `/Library/Developer/CommandLineTools/usr/include/c++/v1`, and these have more advanced features than `4.2.1`. Some folks are having trouble linking to the `libc++experimental` library when trying to use filesystem though:\n\n* https://forums.developer.apple.com/thread/104606\n\nSo it's not as bad as I thought; we may be able to use filesystem with xcode 10, but it's a bit confusing.", "markup": "markdown", "html": "<p>Ok, this is all a bit confusing. This whole time I have been looking at the MacOSX SDK, which has libc++ headers in <code>/usr/include/c++/4.2.1</code> and doesn't have <code>any</code> or other c++17 features. The Xcode command-line tools put these headers in <code>/usr/include</code>, while if you just install Xcode, they are located inside the Xcode.app. Someone has also collected them on github:</p>\n<ul>\n<li><a href=\"https://github.com/phracker/MacOSX-SDKs/tree/master/MacOSX10.13.sdk/usr/include/c%2B%2B/4.2.1\" rel=\"nofollow\" class=\"ap-connect-link\">https://github.com/phracker/MacOSX-SDKs/tree/master/MacOSX10.13.sdk/usr/include/c%2B%2B/4.2.1</a></li>\n</ul>\n<p>However, there are separate headers that have more advanced features. The command-line tools place these headers in <code>/Library/Developer/CommandLineTools/usr/include/c++/v1</code>, and these have more advanced features than <code>4.2.1</code>. Some folks are having trouble linking to the <code>libc++experimental</code> library when trying to use filesystem though:</p>\n<ul>\n<li><a href=\"https://forums.developer.apple.com/thread/104606\" rel=\"nofollow\" class=\"ap-connect-link\">https://forums.developer.apple.com/thread/104606</a></li>\n</ul>\n<p>So it's not as bad as I thought; we may be able to use filesystem with xcode 10, but it's a bit confusing.</p>", "type": "rendered"}, "created_on": "2018-06-28T23:56:33.773409+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": null, "type": "issue_comment", "id": 46486279}