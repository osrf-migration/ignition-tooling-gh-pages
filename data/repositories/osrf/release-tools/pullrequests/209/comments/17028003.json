{"links": {"self": {"href": "data/repositories/osrf/release-tools/pullrequests/209/comments/17028003.json"}, "html": {"href": "#!/osrf/release-tools/pull-requests/209/_/diff#comment-17028003"}}, "parent": {"id": 17003871, "links": {"self": {"href": "data/repositories/osrf/release-tools/pullrequests/209/comments/17003871.json"}, "html": {"href": "#!/osrf/release-tools/pull-requests/209/_/diff#comment-17003871"}}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 209, "links": {"self": {"href": "data/repositories/osrf/release-tools/pullrequests/209.json"}, "html": {"href": "#!/osrf/release-tools/pull-requests/209"}}, "title": "Rerun failed tests in gazebo homebrew (#60, #65)"}, "content": {"raw": "Since discovering that QTest's can write empty junit xml files when they seg-fault, I've updated the `flaky_junit_merge.py` script to catch xml parsing errors and write the same `test_ran` junit failure that the `check_test_ran.py` script generates. I've also added a blank `input4.xml` example file.", "markup": "markdown", "html": "<p>Since discovering that QTest's can write empty junit xml files when they seg-fault, I've updated the <code>flaky_junit_merge.py</code> script to catch xml parsing errors and write the same <code>test_ran</code> junit failure that the <code>check_test_ran.py</code> script generates. I've also added a blank <code>input4.xml</code> example file.</p>", "type": "rendered"}, "created_on": "2016-04-11T08:06:51.670124+00:00", "user": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "updated_on": "2016-04-11T08:06:51.675314+00:00", "type": "pullrequest_comment", "id": 17028003}